# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8


# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# Execute 
exec --no-startup-id autorandr --change --force
#exec --no-startup-id "autocutsel -fork; autocutsel -selection PRIMARY -fork"
exec_always --no-startup-id xrdb -merge ~/.Xresources
exec_always --no-startup-id ~/.config/polybar/launch.sh i3
#exec_always --no-startup-id mopidy
exec_always --no-startup-id "sleep 1; bash $HOME/.fehbg"
#exec --no-startup-id "compton &"
exec --no-startup-id spotify
exec --no-startup-id anki
exec --no-startup-id vivaldi-stable
exec --no-startup-id insync start
#exec --no-startup-id franz
exec --no-startup-id i3-msg 'sleep 2; workspace $ws1; exec alacritty; workspace $ws1'
exec --no-startup-id insync start

#bindsym $mod+n exec alacritty --class Lyrics -e spotify-lyrics

# My bindsym
bindsym $mod+Shift+s exec --no-startup-id "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"
bindsym $mod+Shift+a exec --no-startup-id "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"
bindsym $mod+Shift+f exec --no-startup-id "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause"

bindsym $mod+p exec --no-startup-id "flameshot screen -p ~/screenshots"
bindsym $mod+Shift+p exec --no-startup-id "flameshot gui -p ~/screenshots"
bindsym Print exec --no-startup-id "flameshot full -p ~/screenshots"


# Get colors from .Xresources
set_from_resource $black i3wm.color0 none 
set_from_resource $red i3wm.color1 none 
set_from_resource $yellow i3wm.color2 none 
set_from_resource $green i3wm.color3 none 
set_from_resource $blue i3wm.color4 none 
set_from_resource $magenta i3wm.color5 none 
set_from_resource $cyan i3wm.color6 none 
set_from_resource $white i3wm.color7 none 
set_from_resource $black_bright i3wm.color8 none 
set_from_resource $red_bright i3wm.color9 none 
set_from_resource $yellow_bright i3wm.color10 none 
set_from_resource $green_bright i3wm.color11 none 
set_from_resource $blue_bright i3wm.color12 none 
set_from_resource $magenta_bright i3wm.color13 none 
set_from_resource $cyan_bright i3wm.color14 none 
set_from_resource $white_bright i3wm.color15 none 
set_from_resource $foreground i3wm.foreground none 
set_from_resource $background i3wm.background none 
# Use pactl to adjust volume in PulseAudio.  set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id kitty

# kill focused window
bindsym $mod+comma kill

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show drun
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+bar split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default  for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "I"
set $ws2 "II"
set $ws3 "III"
set $ws4 "IV"
set $ws5 "V"
set $ws6 "VI"
set $ws7 "VII"
set $ws8 "VIII"
set $ws9 "IX"

# Setting each workspace to a specific display
set $monitor_one DVI-D-0
set $monitor_two HDMI-0


workspace $ws1 output $monitor_two
workspace $ws2 output $monitor_one
workspace $ws3 output $monitor_two
workspace $ws4 output $monitor_one
workspace $ws5 output $monitor_two
workspace $ws6 output $monitor_one
workspace $ws7 output $monitor_two
workspace $ws8 output $monitor_one
workspace $ws9 output $monitor_two

# switch to workspace
bindsym $mod+1 workspace "I"
bindsym $mod+2 workspace "II"
bindsym $mod+3 workspace "III"
bindsym $mod+4 workspace "IV"
bindsym $mod+5 workspace "V"
bindsym $mod+6 workspace "VI"
bindsym $mod+7 workspace "VII"
bindsym $mod+8 workspace "VIII"
bindsym $mod+9 workspace "IX"

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace "I"
bindsym $mod+Shift+2 move container to workspace "II"
bindsym $mod+Shift+3 move container to workspace "III"
bindsym $mod+Shift+4 move container to workspace "IV"
bindsym $mod+Shift+5 move container to workspace "V"
bindsym $mod+Shift+6 move container to workspace "VI"
bindsym $mod+Shift+7 move container to workspace "VII"
bindsym $mod+Shift+8 move container to workspace "VIII"
bindsym $mod+Shift+9 move container to workspace "IX"
bindsym $mod+Shift+0 move container to workspace "X"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        #bindsym Left resize shrink width 10 px or 10 ppt
        #bindsym Down resize grow height 10 px or 10 ppt
        #bindsym Up resize shrink height 10 px or 10 ppt
        #bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#}

# Keys

# Go to last workspace
bindsym $mod+Tab workspace back_and_forth
# use window title, but no border
bindsym $mod+t border normal 0
# use no window title and a thick border
bindsym $mod+y border pixel 3
# use neither window title nor border
bindsym $mod+u border none


# Gaps
for_window [class=".*"]  border pixel 3
for_window [class=".*"] title_format " >_ %title "
#smart_gaps on
#smart_gaps inverse_outer
#smart_borders on
#hide_edge_borders smart_no_gaps
gaps outer 28
gaps inner 5

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# class                 border  backgr. text    indicator child_border
client.focused          $yellow $yellow $foreground $white   $yellow
client.focused_inactive $magenta $magenta $foreground $white $magenta
client.unfocused        $black $black $foreground $white $black
client.urgent           $red $red $foreground $white $red
client.placeholder      $green $green $foreground $white $green

client.background       #ffffff


# Some assings
assign [class="Franz"] $ws3
assign [class="Vivaldi"] $ws2
assign [class="Spotify"] $ws4
for_window [class="Spotify"] move to workspace $ws4
assign [class="Anki"] $ws5
assign [instance="Lyrics"] $ws4





